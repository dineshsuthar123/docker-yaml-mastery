version: '3.8'

services:
  # Kafka Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - kafka-network

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - kafka-network

  # Producer Service
  producer:
    build: ./producer
    container_name: kafka-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
      TOPIC_NAME: user-events
    networks:
      - kafka-network

  # Consumer Service 1
  consumer1:
    build: ./consumer
    container_name: kafka-consumer-1
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
      TOPIC_NAME: user-events
      CONSUMER_GROUP: group1
      CONSUMER_ID: consumer-1
    networks:
      - kafka-network

  # Consumer Service 2
  consumer2:
    build: ./consumer
    container_name: kafka-consumer-2
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
      TOPIC_NAME: user-events
      CONSUMER_GROUP: group1
      CONSUMER_ID: consumer-2
    networks:
      - kafka-network

  # Stream Processing with Kafka Streams
  stream-processor:
    build: ./stream-processor
    container_name: stream-processor
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:9092
      INPUT_TOPIC: user-events
      OUTPUT_TOPIC: processed-events
    networks:
      - kafka-network

  # Connect to external systems
  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    networks:
      - kafka-network

  # Schema Registry
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network

  # KSQL Server
  ksqldb:
    image: confluentinc/cp-ksqldb-server:latest
    container_name: ksqldb
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_HOST_NAME: ksqldb
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
