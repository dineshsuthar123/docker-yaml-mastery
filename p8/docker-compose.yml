version: '3.8'

services:
  # Jenkins CI/CD Server
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins-plugins.txt:/usr/share/jenkins/plugins.txt
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - ci-cd

  # GitLab (Git Repository & CI/CD)
  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: gitlab
    hostname: gitlab.local
    ports:
      - "80:80"
      - "443:443"
      - "22:22"
    volumes:
      - gitlab_config:/etc/gitlab
      - gitlab_logs:/var/log/gitlab
      - gitlab_data:/var/opt/gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.local'
        gitlab_rails['gitlab_shell_ssh_port'] = 22
    networks:
      - ci-cd

  # SonarQube (Code Quality)
  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - postgres
    networks:
      - ci-cd

  # Nexus Repository Manager
  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    environment:
      INSTALL4J_ADD_VM_PARAMS: "-Xms1g -Xmx1g -XX:MaxDirectMemorySize=2g"
    networks:
      - ci-cd

  # PostgreSQL for SonarQube
  postgres:
    image: postgres:13
    container_name: postgres-sonar
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - ci-cd

  # Docker Registry
  registry:
    image: registry:2
    container_name: docker-registry
    ports:
      - "5000:5000"
    volumes:
      - registry_data:/var/lib/registry
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
    networks:
      - ci-cd

  # Registry UI
  registry-ui:
    image: joxit/docker-registry-ui:static
    container_name: registry-ui
    ports:
      - "8082:80"
    environment:
      REGISTRY_TITLE: "Local Docker Registry"
      REGISTRY_URL: http://registry:5000
    depends_on:
      - registry
    networks:
      - ci-cd

  # Jenkins Agent
  jenkins-agent:
    image: jenkins/ssh-agent:jdk11
    container_name: jenkins-agent
    environment:
      JENKINS_AGENT_SSH_PUBKEY: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC..."  # Add your public key
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - ci-cd

  # Portainer (Docker Management UI)
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    command: -H unix:///var/run/docker.sock
    networks:
      - ci-cd

volumes:
  jenkins_home:
  gitlab_config:
  gitlab_logs:
  gitlab_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  nexus_data:
  postgresql_data:
  registry_data:
  portainer_data:

networks:
  ci-cd:
    driver: bridge

